{"version":3,"sources":["../../src/index.ts"],"names":["URI_AVAILABLE","UserRejectedRequestError","supportedChainIds","rpc","Number","WalletConnectConnector","getSupportedChains","handleChainChanged","chainId","handleAccountsChanged","account","accounts","handleDisconnect","error","provider","walletConnectProvider","m","WalletConnectProvider","Promise","deactivate","AbstractConnector","emitUpdate","ConnectorEvent","emitError","emitDeactivate"],"mappings":"qoDAIaA,EAAgB,gBAMhBC,EAAb,YACE,a,aACE,sBACA,KAAY,cAAZ,KACA,2C,EAJJ,2BAQA,c,IAA8BC,sBAAmBC,QAC7C,OAAF,IAIOA,EAAM,oBAAqB,YAAC,OAAIC,OAAJ,WAAnC,G,IAGWC,EAAb,YAKE,c,aACE,cAAM,CAAEH,kBAAmBI,EAAkB,MAA7C,MAEA,SAEA,qBAA0B,4BAA1B,IACA,wBAA6B,+BAA7B,IACA,mBAAwB,0BAAxB,I,EAZF,EAAF,KAAE,IAAF,cAAE,SAAF,mBAeUC,YAIN,gBAAgB,CAAEC,aAnBpB,EAAF,sBAsBUC,YAIN,gBAAgB,CAAEC,QAASC,EAAQ,MA1BrC,EAAF,iBA6BUC,WAIN,uBAjCF,EAAF,oBAAI,I,MAqCK,K,oBAKL,0CAA8C,EAA9C,oBACA,6CAAiD,EAAjD,uBACA,wCAA4C,EAA5C,kB,gBAEsB,uCAEd,mBAAgCD,EAAhC,MAFc,OAGb,YAEL,yBAAIE,UACF,MAAM,IAAN,EAGF,YATkB,eAAhBH,GAYN,MAAO,CAAEI,SAAU,EAAZ,sBAAwCJ,e,iBArB1C,EAAKK,sB,uBAC4B,mEAAgD,YAAC,4BAAIC,OAAJ,EAAIA,EAAC,SAAL,QAAjD,eAA9BC,GACN,wBAA6B,MAA0B,EAAvD,W,mDAvCN,SAAM,OAAN,oBAAE,EAAF,uBAAI,IA8DA,uBAAO,KAAP,uBA9DJ,SAAM,OAAN,oBAAE,EAAF,sBAAI,IAkEA,OAAOC,gBAAgB,2BAAvB,SAlEJ,SAAM,OAAN,oBAAE,EAAF,sBAAI,IAsEA,OAAO,gBAAgB,2BAAhB,gBAA0D,mBAAgCP,EAAhC,MAtErE,SAAM,OAAN,oBAAE,EAAF,WAyESQ,WACD,KAAJ,wBACE,uDAAwD,KAAxD,kBACA,yDAA0D,KAA1D,oBACA,4DAA6D,KAA7D,uBACA,0CA9EJ,EAAF,iBAAI,I,OAmFA,sB,kBAnFJ,SAAM,OAAN,6B,4FAvBsBC,EAAtB,Y,4BAGgBlB,Q,MAAkD,MAAlDA,kB,6BAEZ,oB,oHALJ,WAcYmB,Y,KAIR,KAAUC,IAAV,W,EAlBJ,UAqBYC,Y,KAIR,KAAUD,IAAV,U,EAzBJ,eA4BYE,W,KAIR,KAAUF,IAAV,a,EAhCJ","file":"static/js/20.ab95d374.chunk.js","sourcesContent":["import { EventEmitter } from 'events'\nimport { AbstractConnectorArguments, ConnectorUpdate, ConnectorEvent } from '@web3-react/types'\n\nexport abstract class AbstractConnector extends EventEmitter {\n  public readonly supportedChainIds?: number[]\n\n  constructor({ supportedChainIds }: AbstractConnectorArguments = {}) {\n    super()\n    this.supportedChainIds = supportedChainIds\n  }\n\n  public abstract async activate(): Promise<ConnectorUpdate>\n  public abstract async getProvider(): Promise<any>\n  public abstract async getChainId(): Promise<number | string>\n  public abstract async getAccount(): Promise<null | string>\n  public abstract deactivate(): void\n\n  protected emitUpdate(update: ConnectorUpdate): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Update}' with payload`, update)\n    }\n    this.emit(ConnectorEvent.Update, update)\n  }\n\n  protected emitError(error: Error): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Error}' with payload`, error)\n    }\n    this.emit(ConnectorEvent.Error, error)\n  }\n\n  protected emitDeactivate(): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Deactivate}'`)\n    }\n    this.emit(ConnectorEvent.Deactivate)\n  }\n}\n"],"sourceRoot":""}